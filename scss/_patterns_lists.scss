// Default list styling
@mixin vf-lists {
  @include vf-lists-list;
  @include vf-lists-list-divided;
  @include vf-lists-list-item-state;
  @include vf-lists-combined-list;
  @include vf-lists-inline-list;
  @include vf-lists-inline-list-middot;
  @include vf-stepped-list;
}

// List styling using list class
@mixin vf-lists-list {
  .list {
    @extend %list;

    &__item {
      @extend %list-item;
    }
  }
}

// A list with separators between items
@mixin vf-lists-list-divided {
  .list--divided {
    @extend %list;

    .list__item {
      @extend %list-item;
      border-bottom: 1px dotted $color-warm-grey;

      &:last-of-type,
      .last-item {
        border-bottom: 0;
      }
    }
  }
}

// Displays an ubuntu styled list item with a tick bullet
@mixin vf-lists-list-item-state {
  .list__item--icon {
    background-image: svg-tick($color-brand);
    background-repeat: no-repeat;
    background-position: 0 1em;
    padding: 10px 0 0 25px;
  }
}

// Displays split as one on small screens
@mixin vf-lists-combined-list {
  .combined-list {
    ul,
    div {
      margin-bottom: 0;
    }

    .last-item {
      border-bottom: 1px dotted $color-warm-grey;
      padding-bottom: 10px;
    }

    .last-col {
      margin-bottom: 20px;

      .last-item {
        border-bottom: 0;
        padding-bottom: 0;
      }
    }
  }

  @media only screen and (min-width: $breakpoint-medium) {
    .combined-list {
      ul,
      div {
        margin-bottom: 20px;
      }

      .last-item {
        border-bottom: 0;
        padding-bottom: 0;
      }
    }
  }
}

// Displays a list inline with spacing
@mixin vf-lists-inline-list {
  .inline-list {
    margin-left: 0;
    padding-left: 0;

    &__item {
      @extend %inline-list-item;
    }
  }
}

@mixin vf-lists-inline-list-middot {
  .inline-list--middot {
    margin-left: 0;
    padding-left: 0;

    .inline-list__item {
      @extend %inline-list-item;
      position: relative;

      &::after {
        content: 'â€¢';
        color: $color-mid-grey;
        line-height: 0;
        font-size: 1.4rem;
        position: absolute;
        right: -1rem;
        top: .55rem;

      }

      &:last-of-type,
      .last-item {
        &::after {
          content: '';
        }
      }
    }
  }
}

// Displays a step by step list of instructions
@mixin vf-stepped-list {
  .list-step {
    list-style: none;
    margin-left: $grid-gutter-width * 3;
  }

  @media only screen and (max-width: $breakpoint-large) {
    .list-step__item:first-child {
      margin-top: 10px;
    }
  }

  @media only screen and (min-width: $breakpoint-large) {
    .list-step__title {
      margin-bottom: 0;
    }
  }

  .list-step__bullet {
    box-shadow: 0 1px 3px 1px rgba(51, 51, 51, .2);
    background: $color-light;
    border-radius: 50%;
    padding: .3em .68em;
    display: inline-block;
    color: $color-highlight;
    margin-right: .34375em;
    margin-bottom: .625em;
    margin-left: -$grid-gutter-width * 3;

    @media only screen and (max-width: $breakpoint-large) {
      position: absolute;
      top: -5px;
    }
  }
}

// The placeholder for basic border bottom lists
%list {
  list-style: none;
  margin-left: 0;
  padding-left: 0;

  &__item {
    @extend %list-item;
  }
}

%list-item {
  margin-bottom: 0;
  padding-bottom: .63rem;
  padding-top: .63rem;

  &:last-of-type,
  .last-item {
    margin-bottom: 0;
    padding-bottom: 0;
  }
}

%inline-list-item {
  display: inline;
  list-style: none;
  margin-right: 1.25rem;

  &:last-of-type,
  .last-item {
    margin-right: 0;
  }
}

// this is to get the variable inserted in an inline svg, we have to strip the # and replace with %23
// it also checks to see if the color is a light color and adjusts the background color accordingly
@function url-friendly-color($color) {
  @if type-of($color) != 'color' {
    @warn '#{$fill-color} is not a color.';
    @return false;
  } @else {
    @if (lightness($color) > 50) {
      @return '%23' + str-slice('#{darken($color, 20%)}', 2, -1);
    } @else {
      @return '%23' + str-slice('#{$color}', 2, -1);
    }
  }
}

@function svg-tick($color) {
  @if type-of($color) != 'color' {
    @warn '#{$color} is not a color.';
    @return false;
  }
  @return url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14"><circle fill="' + url-friendly-color($color) + '" cx="7" cy="7" r="7"/><path fill="%23fff" d="M6.1 10.813L2.41 8.105l1.184-1.613L5.9 8.187l4.393-4.394 1.414 1.414z" /></svg>');
}
